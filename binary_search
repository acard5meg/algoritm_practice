# Binary search, python

# def binary_search(arr : list, value : int, answer = 0) -> int:

#     if len(arr) == 0:
#         return "NOT IN LIST"
#     if arr[len(arr) // 2] == value:
#         answer += len(arr) // 2
#         return answer
#     elif arr[len(arr) // 2] > value:
#         return binary_search(arr[:len(arr) // 2],value,answer)
#     else:
#         answer += len(arr) // 2 + 1
#         return binary_search(arr[len(arr) // 2 + 1: ],value,answer)

def binary_search(arr : list, value : int):
    return bin_search(arr, value, 0, len(arr)-1)

def bin_search(arr : list, value : int, start : int, end : int) -> int:
    # print("start",start)
    # print("end",end)
    # import pdb; pdb.set_trace()
    if start > end:
        return -1
    if arr[(start + end) // 2] == value:
        return (start + end) // 2
    elif arr[(start + end) // 2] < value:
        return bin_search(arr, value, ((start + end) // 2) + 1, end )
    else:
        return bin_search(arr, value, start , ((start + end) // 2) - 1)

    
if __name__ == "__main__":
    inp_arr = [1,2,4,5]
    print(binary_search(inp_arr,3)) 
    print(binary_search(inp_arr,2)) 
    print(binary_search(inp_arr,1)) 
    print(binary_search(inp_arr,0)) 
    print(binary_search(inp_arr,-1)) 
    print(binary_search(inp_arr,4)) 
    print(binary_search(inp_arr,5))
    print(binary_search(inp_arr,6))